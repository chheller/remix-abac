datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  adGroups UserAdGroup[]
  jobCodes UserJobCode[]
}

model Password {
  hash String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}
// Just for testing purposes
model UserAdGroup {
  adGroupName String
  user User @relation(fields: [userId], references: [id], onDelete: NoAction)
  userId String

  @@id([adGroupName, userId])
}

model UserJobCode {
  jobCode String
  user User @relation(fields: [userId], references: [id], onDelete: NoAction)
  userId String

  @@id([jobCode, userId])
}
model UserRole {
  id String @id @default(cuid())
  name String
  roleFeatures RoleFeature[]
  roleJobCodes RoleJobCode[]
  roleAdGroups RoleAdGroup[]
  modifiedBy String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([name])
}

model RoleFeature {
  id String @id @default(cuid())
  userRole UserRole @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId String
  feature UserFeature @relation(fields: [featureId], references: [id], onDelete: Cascade)
  featureId String
  modifiedBy String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([roleId, featureId])
}

model UserFeature {
  id String @id @default(cuid())
  feature String
  roleFeatures RoleFeature[]
  modifiedBy String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([feature])
}

model RoleJobCode {
  id String @id @default(cuid())
  userRole UserRole @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId String
  jobCode String
  modifiedBy String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([jobCode, roleId])
}

model RoleAdGroup {
  id String @id @default(cuid())
  userRole UserRole @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId String
  adGroupName String
  modifiedBy String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([adGroupName, roleId])
}
